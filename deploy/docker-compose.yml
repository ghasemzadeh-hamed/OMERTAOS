version: "3.9"
services:
  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    environment:
      AION_GATEWAY_PORT: 8080
      AION_CONTROL_GRPC: control:50051
      AION_REDIS_URL: redis://redis:6379
    ports:
      - "8080:8080"
    depends_on:
      - control
      - redis
  control:
    build:
      context: ../control
      dockerfile: Dockerfile
    environment:
      AION_CONTROL_API_PREFIX: /v1
      AION_CONTROL_REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - mongo
      - kafka
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: aionos
      POSTGRES_USER: aionos
      POSTGRES_PASSWORD: aionos
    ports:
      - "5432:5432"
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"
  minio:
    image: minio/minio:RELEASE.2024-03-15T02-53-53Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
  kafka:
    image: bitnami/kafka:3.6.1
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
  prometheus:
    image: prom/prometheus:v2.50.0
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana:/var/lib/grafana
  otel-collector:
    image: otel/opentelemetry-collector:0.92.0
    volumes:
      - ./observability/otel-collector.yaml:/etc/otel/config.yaml
    command: ["--config=/etc/otel/config.yaml"]
    ports:
      - "4318:4318"
